x-common-labels: &common-labels
  labels:
    org.opencontainers.image.source: https://github.com/kile/Killua
    org.opencontainers.image.title: "Killua"
    org.opencontainers.image.description: "The Killua Discord bot with Rust API and ZMQ Proxy"
    org.opencontainers.image.version: "1.2.0"
    org.opencontainers.image.authors: "kile@killua.dev"

services:
  proxy:
    container_name: zmq_proxy
    image: ghcr.io/kile/zmq-proxy:latest
    logging:
      driver: "json-file"
      options:
        max-file: "3"   # number of files or file count
        max-size: "10m" # file size
    build:
      context: "./zmq_proxy"
      target: ${MODE:-prod}
      args:
        - "MYUID=${MYUID:-1000}"
        - "MYGID=${MYGID:-1000}"
    environment:
      - ZMQ_API_ADDRESS=tcp://*:5559
      - ZMQ_BOT_ADDRESS=tcp://*:5560
      - ZMQ_SCRIPT_ADDRESS=tcp://*:5558
    ports:
      - "5558:5558/tcp"
    restart: unless-stopped
    <<: *common-labels

  api:
    image: ghcr.io/kile/killua-api:latest
    build:
      context: ./
      dockerfile: ./api/Dockerfile
      target: ${MODE:-prod}
      args:
        - "MYUID=${MYUID:-1000}"
        - "MYGID=${MYGID:-1000}"
    container_name: rust_api
    ports:
      - "6060:7650"
    volumes:
      - ./cards.json:/app/cards.json
      - ./assets:/app/assets
      - ./pipes:/app/pipes
    environment:
      - ZMQ_ADDRESS=tcp://proxy:5559
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - proxy
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    <<: *common-labels

  bot:
    image: ghcr.io/kile/killua-bot:latest
    build:
      context: ./
      dockerfile: ./killua/Dockerfile
      target: ${MODE:-prod}
      args:
        - "MYUID=${MYUID:-1000}"
        - "MYGID=${MYGID:-1000}"
    container_name: python_bot
    restart: unless-stopped
    environment:
      - PORT=6060
      - ZMQ_ADDRESS=tcp://proxy:5560
    env_file:
      - .env
    volumes:
      - ./assets:/app/assets
    depends_on:
      - api
      - proxy
    logging:
      driver: "json-file"
      options:
        max-file: "10"   # number of files or file count
        max-size: "10m" # file size
    <<: *common-labels

  grafana:
    image: grafana/grafana:10.4.2
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-file: "3"   # number of files or file count
        max-size: "10m" # file size

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    logging:
      driver: "json-file"
      options:
        max-file: "3"   # number of files or file count
        max-size: "10m" # file size

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml
      - loki_data:/loki               # Persistent data directory
      - loki_tmp:/tmp/loki            # Optional safeguard
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    ports:
      - 12345:12345
      - 4317:4317
      - 4318:4318
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
      - ./logs:/tmp/app-logs/
      - /var/run/docker.sock:/var/run/docker.sock
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "50m" # file size

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    # Mount the host filesystem so we get real host metrics (not container metrics)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    expose:
      - "9100"
    logging:
      driver: "json-file"
      options:
        max-file: "3"   # number of files or file count
        max-size: "10m" # file size

volumes:
  prom_data:
  loki_data:
  loki_tmp: