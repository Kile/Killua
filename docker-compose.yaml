services:
  proxy:
    build:
      context: "./zmq_proxy"
    environment:
      - ZMQ_CLIENT_ADDRESS=tcp://*:5559
      - ZMQ_SERVER_ADDRESS=tcp://*:5560
    restart: unless-stopped
    # image: localhost:5000/zmq_proxy:latest
  labels:
    - org.opencontainers.image.source=https://github.com/kile/Killua
    - org.opencontainers.image.title=ZMQ Proxy
    - org.opencontainers.image.description=ZMQ Proxy for Killua's API and Bot


  api:
    build:
      context: ./
      dockerfile: ./api/Dockerfile
      # MODE=[dev | prod] docker compose up -d --build 
      target: ${MODE:-dev}
    container_name: rust_api
    ports:
      - "6060:7650"
    environment:
      - ZMQ_ADDRESS=tcp://proxy:5559
    restart: unless-stopped
    labels: 
      - org.opencontainers.image.source=https://github.com/kile/Killua
      - org.opencontainers.image.title=Killua API
      - org.opencontainers.image.description=Killua's API, written in Rust using Rocket

  bot:
    build:
      context: ./
      dockerfile: ./killua/Dockerfile
      # MODE=[dev | prod] docker compose up -d --build 
      # default is dev
      target: ${MODE:-dev}
    container_name: python_bot
    restart: unless-stopped
    environment:
      - PORT=6060
      - ZMQ_ADDRESS=tcp://proxy:5560
    ports:
      - '8000:8000' # prometheus endpoint
    # image: localhost:5000/python_bot:latest
    labels:
      - org.opencontainers.image.source=https://github.com/kile/Killua
      - org.opencontainers.image.title=Killua Bot
      - org.opencontainers.image.description=The Killua Discord Bot, written in Python using discord.py

  grafana:
    image: grafana/grafana:10.4.2
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

volumes:
  prom_data: